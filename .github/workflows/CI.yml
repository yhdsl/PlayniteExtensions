name: Build Playnite Extensions

on:
  push:
  workflow_dispatch:

jobs:
  VirtualLibrary:
    runs-on: windows-latest

    steps:
      - name: Checkout translate file
        uses: actions/checkout@v4
        with:
          path: './translate'

      - name: Checkout translator tool
        uses: actions/checkout@v4
        with:
          repository: 'yhdsl/Translator-Tool'
          path: './tool'

      - name: Checkout VirtualLibrary source code
        uses: actions/checkout@v4
        with:
          repository: 'iSplasher/PlayniteExtensions'
          path: './source'

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Run translator tool
        run: python .\tool\translator.py .\translate\rules\virtual-library -r "$(pwd)\source\plugins"

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v2

      - name: Nuget Restore
        run: nuget restore .\source\Plugins.sln

      - name: Build entire solution (with .NET Framework 4.6.2)
        run: |
          cd "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\MSBuild\Current\Bin\"
          .\MSBuild.exe $Env:GITHUB_WORKSPACE\source\Plugins.sln -p:Configuration=Release -restore

      - name : Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: VirtualLibrary
          path: |
            .\source\plugins\virtual-library\bin\*

  FriendlySetTime:
    runs-on: windows-latest

    steps:
      - name: Checkout translate file
        uses: actions/checkout@v4
        with:
          path: './translate'

      - name: Checkout translator tool
        uses: actions/checkout@v4
        with:
          repository: 'yhdsl/Translator-Tool'
          path: './tool'

      - name: Checkout FriendlySetTime source code
        uses: actions/checkout@v4
        with:
          repository: 'erys/FriendlySetTimePlaynitePlugin'
          path: './source'

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Run translator tool
        run: python .\tool\translator.py .\translate\rules\FriendlySetTime -r "$(pwd)\source"

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v2

      - name: Nuget Restore
        run: nuget restore .\source\FriendlySetTime.sln

      - name: Build entire solution (with .NET Framework 4.6.2)
        run: |
          cd "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\MSBuild\Current\Bin\"
          .\MSBuild.exe $Env:GITHUB_WORKSPACE\source\FriendlySetTime.sln -p:Configuration=Release -restore

      - name : Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: FriendlySetTime
          path: |
            .\source\bin\*

  CustomSteamCovers:
    runs-on: windows-latest

    steps:
      - name: Checkout translate file
        uses: actions/checkout@v4
        with:
          path: './translate'

      - name: Checkout translator tool
        uses: actions/checkout@v4
        with:
          repository: 'yhdsl/Translator-Tool'
          path: './tool'

      - name: Checkout CustomSteamCovers source code
        uses: actions/checkout@v4
        with:
          repository: 'uwx/PlayniteCustomSteamCovers'
          path: './source'

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Run translator tool
        run: python .\tool\translator.py .\translate\rules\CustomSteamCovers -r "$(pwd)\source"

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v2

      - name: Nuget Restore
        run: nuget restore .\source\PlayniteCustomSteamCovers.sln

      - name: Build entire solution (with .NET Framework 4.6.2)
        run: |
          cd "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\MSBuild\Current\Bin\"
          .\MSBuild.exe $Env:GITHUB_WORKSPACE\source\PlayniteCustomSteamCovers.sln -p:Configuration=Release -restore

      - name : Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: CustomSteamCovers
          path: |
            .\source\PlayniteCustomSteamCovers\bin\*

  LaunchMate:
    runs-on: windows-latest

    steps:
      - name: Checkout translate file
        uses: actions/checkout@v4
        with:
          path: './translate'

      - name: Checkout translator tool
        uses: actions/checkout@v4
        with:
          repository: 'yhdsl/Translator-Tool'
          path: './tool'

      - name: Checkout LaunchMate source code
        uses: actions/checkout@v4
        with:
          repository: 'ASchoe311/LaunchMate'
          path: './source'

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Run translator tool
        run: python .\tool\translator.py .\translate\rules\LaunchMate -r "$(pwd)\source"

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v2

      - name: Nuget Restore
        run: nuget restore .\source\LaunchMate.sln

      - name: Build entire solution (with .NET Framework 4.6.2)
        run: |
          cd "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\MSBuild\Current\Bin\"
          echo "" > $Env:GITHUB_WORKSPACE\source\postbuild.bat
          .\MSBuild.exe $Env:GITHUB_WORKSPACE\source\LaunchMate.sln -p:Configuration=Release -restore

      - name : Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: LaunchMate
          path: |
            .\source\bin\*

  DolphinMetadata:
    runs-on: windows-latest

    steps:
      - name: Checkout translate file
        uses: actions/checkout@v4
        with:
          path: './translate'

      - name: Checkout translator tool
        uses: actions/checkout@v4
        with:
          repository: 'yhdsl/Translator-Tool'
          path: './tool'

      - name: Checkout DolphinMetadata source code
        uses: actions/checkout@v4
        with:
          repository: 'uwx/PlayniteDolphinMetadata'
          path: './source'

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Run translator tool
        run: python .\tool\translator.py .\translate\rules\DolphinMetadata -r "$(pwd)\source"

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v2

      - name: Nuget Restore
        run: nuget restore .\source\PlayniteDolphinMetadata.sln

      - name: Build entire solution (with .NET Framework 4.6.2)
        run: |
          cd "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\MSBuild\Current\Bin\"
          .\MSBuild.exe $Env:GITHUB_WORKSPACE\source\PlayniteDolphinMetadata.sln -p:Configuration=Release -restore

      - name : Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: DolphinMetadata
          path: |
            .\source\PlayniteDolphinMetadata\bin\*

  JeshibuPlayniteExtensions:
    runs-on: windows-latest

    steps:
      - name: Checkout translate file
        uses: actions/checkout@v4
        with:
          path: './translate'

      - name: Checkout translator tool
        uses: actions/checkout@v4
        with:
          repository: 'yhdsl/Translator-Tool'
          path: './tool'

      - name: Checkout all Jeshibu PlayniteExtensions source code
        uses: actions/checkout@v4
        with:
          repository: 'Jeshibu/PlayniteExtensions'
          path: './source'

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Run translator tool
        run: |
          python .\tool\translator.py .\translate\rules\PlayniteExtensions.Metadata.Common -r "$(pwd)\source\source\PlayniteExtensions.Metadata.Common"
          python .\tool\translator.py .\translate\rules\GOGMetadata -r "$(pwd)\source\source\GOGMetadata"
          python .\tool\translator.py .\translate\rules\Steam_Tags_Importer -r "$(pwd)\source\source\SteamTagsImporter"
          python .\tool\translator.py .\translate\rules\PCGamingWikiMetadata -r "$(pwd)\source\source\PCGamingWikiMetadata"
          python .\tool\translator.py .\translate\rules\XboxMetadata -r "$(pwd)\source\source\XboxMetadata"

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v2

      - name: Copy shared xaml for bulk import projects
        run: |
            $bulkImportProjects = @('GiantBombMetadata', 'MobyGamesMetadata', 'PCGamingWikiMetadata', 'SteamTagsImporter', 'TvTropesMetadata')
            foreach ($proj in $bulkImportProjects){
              xcopy "$Env:GITHUB_WORKSPACE\source\source\PlayniteExtensions.Metadata.Common\GamePropertyImportView.xaml*" "$Env:GITHUB_WORKSPACE\source\source\$proj\Common\Metadata" /Y /I
            }

      - name: Setup Playnite
        run: |
           Invoke-WebRequest -Uri "https://github.com/JosefNemec/Playnite/releases/download/10.37/Playnite1037.zip" -OutFile "$Env:GITHUB_WORKSPACE\Playnite.zip"
           Expand-Archive "$Env:GITHUB_WORKSPACE\Playnite.zip" -DestinationPath "$Env:GITHUB_WORKSPACE\Playnite"

      - name: Copy Playnite Emulation directory to ExtraEmulatorProfiles
        run: |
           xcopy "$Env:GITHUB_WORKSPACE\Playnite\Emulation\*.yaml" "$Env:GITHUB_WORKSPACE\source\source\ExtraEmulatorProfiles\EmulationFiles\Original" /Y /I
           xcopy "$Env:GITHUB_WORKSPACE\Playnite\Emulation\Emulators" "$Env:GITHUB_WORKSPACE\source\source\ExtraEmulatorProfiles\EmulationFiles\Original\Emulators" /Y /I /E

      - name: Nuget Restore
        run: nuget restore .\source\source\PlayniteExtensions.slnx

      - name: Build entire solution (with .NET Framework 4.6.2)
        run: |
          cd "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\MSBuild\Current\Bin\"
          .\MSBuild.exe $Env:GITHUB_WORKSPACE\source\source\PlayniteExtensions.slnx -p:Configuration=Release -restore

      - name : Upload artifact (GOGMetadata)
        uses: actions/upload-artifact@v4
        with:
          name: GOGMetadata
          path: |
            .\source\source\GOGMetadata\bin\*

      - name : Upload artifact (Steam_Tags_Importer)
        uses: actions/upload-artifact@v4
        with:
          name: Steam_Tags_Importer
          path: |
            .\source\source\SteamTagsImporter\bin\*

      - name : Upload artifact (PCGamingWikiMetadata)
        uses: actions/upload-artifact@v4
        with:
          name: PCGamingWikiMetadata
          path: |
            .\source\source\PCGamingWikiMetadata\bin\*

      - name : Upload artifact (XboxMetadata)
        uses: actions/upload-artifact@v4
        with:
          name: XboxMetadata
          path: |
            .\source\source\XboxMetadata\bin\*

  NintendoMetadata:
    runs-on: windows-latest

    steps:
      - name: Checkout translate file
        uses: actions/checkout@v4
        with:
          path: './translate'

      - name: Checkout translator tool
        uses: actions/checkout@v4
        with:
          repository: 'yhdsl/Translator-Tool'
          path: './tool'

      - name: Checkout NintendoMetadata source code
        uses: actions/checkout@v4
        with:
          repository: 'minhnhattonthat/playnite-nintendo-metadata-plugin'
          path: './source'

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Run translator tool
        run: python .\tool\translator.py .\translate\rules\NintendoMetadata -r "$(pwd)\source"

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v2

      - name: Nuget Restore
        run: nuget restore .\source\NintendoMetadata.sln

      - name: Build entire solution (with .NET Framework 4.6.2)
        run: |
          cd "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\MSBuild\Current\Bin\"
          .\MSBuild.exe $Env:GITHUB_WORKSPACE\source\NintendoMetadata.sln -p:Configuration=Release -restore

      - name : Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: NintendoMetadata
          path: |
            .\source\bin\*

  BetterScan:
    runs-on: windows-latest

    steps:
      - name: Checkout translate file
        uses: actions/checkout@v4
        with:
          path: './translate'

      - name: Checkout translator tool
        uses: actions/checkout@v4
        with:
          repository: 'yhdsl/Translator-Tool'
          path: './tool'

      - name: Checkout BetterScan source code
        uses: actions/checkout@v4
        with:
          repository: 'brbrss/BetterScan'
          path: './source'

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Run translator tool
        run: python .\tool\translator.py .\translate\rules\BetterScan -r "$(pwd)\source\BetterScan\src"

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v2

      - name: Nuget Restore
        run: nuget restore .\source\BetterScan.sln

      - name: Build entire solution (with .NET Framework 4.6.2)
        run: |
          cd "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\MSBuild\Current\Bin\"
          .\MSBuild.exe $Env:GITHUB_WORKSPACE\source\BetterScan.sln -p:Configuration=Release -restore

      - name : Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: BetterScan
          path: |
            .\source\BetterScan\bin\*

  FreeGameNotifications:
    runs-on: windows-latest

    steps:
      - name: Checkout translate file
        uses: actions/checkout@v4
        with:
          path: './translate'

      - name: Checkout translator tool
        uses: actions/checkout@v4
        with:
          repository: 'yhdsl/Translator-Tool'
          path: './tool'

      - name: Checkout FreeGameNotifications source code
        uses: actions/checkout@v4
        with:
          repository: 'epidemicz/FreeGameNotifications'
          path: './source'

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Run translator tool
        run: python .\tool\translator.py .\translate\rules\FreeGameNotifications -r "$(pwd)\source\source"

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v2

      - name: Nuget Restore
        run: nuget restore .\source\source\FreeGameNotifications.sln

      - name: Build entire solution (with .NET Framework 4.6.2)
        run: |
          cd "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\MSBuild\Current\Bin\"
          .\MSBuild.exe $Env:GITHUB_WORKSPACE\source\source\FreeGameNotifications.sln -p:Configuration=Release -restore

      - name : Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: FreeGameNotifications
          path: |
            .\source\source\bin\*

  JsonLibraryImportExport:
    runs-on: windows-latest

    steps:
      - name: Checkout translate file
        uses: actions/checkout@v4
        with:
          path: './translate'

      - name: Checkout translator tool
        uses: actions/checkout@v4
        with:
          repository: 'yhdsl/Translator-Tool'
          path: './tool'

      - name: Checkout JsonLibraryImportExport source code
        uses: actions/checkout@v4
        with:
          repository: 'sokolinthesky/JsonLibraryImportExport'
          path: './source'

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Run translator tool
        run: python .\tool\translator.py .\translate\rules\JsonLibraryImportExport -r "$(pwd)\source"

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v2

      - name: Nuget Restore
        run: nuget restore .\source\JsonLibraryImportExport.sln

      - name: Build entire solution (with .NET Framework 4.6.2)
        run: |
          cd "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\MSBuild\Current\Bin\"
          .\MSBuild.exe $Env:GITHUB_WORKSPACE\source\JsonLibraryImportExport.sln -p:Configuration=Release -restore

      - name : Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: JsonLibraryImportExport
          path: |
            .\source\bin\*

  ReviewViewer:
    runs-on: windows-latest

    steps:
      - name: Checkout translate file
        uses: actions/checkout@v4
        with:
          path: './translate'

      - name: Checkout translator tool
        uses: actions/checkout@v4
        with:
          repository: 'yhdsl/Translator-Tool'
          path: './tool'

      - name: Checkout ReviewViewer source code
        uses: actions/checkout@v4
        with:
          repository: 'darklinkpower/PlayniteExtensionsCollection'
          path: './source'

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Run translator tool
        run: python .\tool\translator.py .\translate\rules\ReviewViewer -r "$(pwd)\source"

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v2

      - name: Nuget Restore
        run: |
          nuget restore .\source\source\PlayniteExtensions.sln
          nuget restore .\source\source\Generic\ReviewViewer\ReviewViewer.sln

      - name: Build entire solution (with .NET Framework 4.6.2)
        run: |
          cd "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\MSBuild\Current\Bin\"
          .\MSBuild.exe $Env:GITHUB_WORKSPACE\source\source\Generic\ReviewViewer\ReviewViewer.sln -p:Configuration=Release -restore

      - name : Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ReviewViewer
          path: |
            .\source\source\Generic\ReviewViewer\bin\Release\*

  SteamWishlistDiscountNotifier:
    runs-on: windows-latest

    steps:
      - name: Checkout translate file
        uses: actions/checkout@v4
        with:
          path: './translate'

      - name: Checkout translator tool
        uses: actions/checkout@v4
        with:
          repository: 'yhdsl/Translator-Tool'
          path: './tool'

      - name: Checkout SteamWishlistDiscountNotifier source code
        uses: actions/checkout@v4
        with:
          repository: 'darklinkpower/PlayniteExtensionsCollection'
          path: './source'

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Run translator tool
        run: python .\tool\translator.py .\translate\rules\SteamWishlistDiscountNotifier -r "$(pwd)\source"

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v2

      - name: Move .sln
        run: |
          mv '.\translate\extra\SteamWishlistDiscountNotifier\SteamWishlistDiscountNotifier.sln' '.\source\source\Generic\SteamWishlistDiscountNotifier'

      - name: Nuget Restore
        run: |
          nuget restore .\source\source\PlayniteExtensions.sln
          nuget restore .\source\source\Generic\SteamWishlistDiscountNotifier\SteamWishlistDiscountNotifier.sln

      - name: Build entire solution (with .NET Framework 4.6.2)
        run: |
          cd "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\MSBuild\Current\Bin\"
          .\MSBuild.exe $Env:GITHUB_WORKSPACE\source\source\Generic\SteamWishlistDiscountNotifier\SteamWishlistDiscountNotifier.sln -p:Configuration=Release -restore

      - name : Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: SteamWishlistDiscountNotifier
          path: |
            .\source\source\Generic\SteamWishlistDiscountNotifier\bin\Release\*
